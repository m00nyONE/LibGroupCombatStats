{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"index","text":""},{"location":"#types","title":"Types","text":"<ul> <li>class CombatStatsObject</li> <li>class LibGroupCombatStats</li> <li>class dps</li> <li>class hps</li> <li>class skillLines</li> <li>class ult</li> </ul>"},{"location":"types/CombatStatsObject/","title":"class CombatStatsObject","text":"<p>_CombatStatsObject which can be used by other addons to get data or register callbacks for events - it acts as a communication gateway between addons &amp; the lib</p>"},{"location":"types/CombatStatsObject/#methods","title":"methods","text":""},{"location":"types/CombatStatsObject/#combatstatsobjectnew","title":"CombatStatsObject.New","text":"<pre><code>function CombatStatsObject.New() -&gt; A CombatStatsObject {\n    __index = CombatStatsObject,\n    New = function,\n    GetStatsShared = function,\n    Iterate = function,\n    __pairs = function,\n    GetGroupSize = function,\n    __len = function,\n    GetGroupStats = function,\n    GetUnitStats = function,\n    GetUnitDPS = function,\n    GetUnitHPS = function,\n    GetUnitULT = function,\n    GetUnitSkillLines = function,\n    HasUnitUltimatesSlotted = function,\n    HasUnitUltActivatedSetSlotted = function,\n    RegisterForEvent = function,\n    UnregisterForEvent = function,\n}\n</code></pre> <p>@return <code>A</code> - new instance of _CombatStatsObject</p> <p>Constructor for the _CombatStatsObject</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetstatsshared","title":"CombatStatsObject.GetStatsShared","text":"<pre><code>function CombatStatsObject.GetStatsShared() -&gt;  string\n</code></pre> <p>Returns a list of functionalities currently enabled in the library</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectiterate","title":"CombatStatsObject.Iterate","text":"<pre><code>function CombatStatsObject.Iterate() -&gt;  string\n</code></pre> <p>Returns key, value of groupStats</p>"},{"location":"types/CombatStatsObject/#combatstatsobject__pairs","title":"CombatStatsObject.__pairs","text":"<pre><code>function CombatStatsObject.__pairs() -&gt;  string\n</code></pre> <p>metatable version of _CombatStatsObject:Iterate()</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetgroupsize","title":"CombatStatsObject.GetGroupSize","text":"<pre><code>function CombatStatsObject.GetGroupSize() -&gt;  number\n</code></pre> <p>@return  - : the number of units in the group</p> <p>Returns the number of group members in \"groupStats\"</p>"},{"location":"types/CombatStatsObject/#combatstatsobject__len","title":"CombatStatsObject.__len","text":"<pre><code>function CombatStatsObject.__len() -&gt;  number\n</code></pre> <p>@return  - : the number of units in the group</p> <p>metatable version of _CombatStatsObject:GetGroupSize()</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetgroupstats","title":"CombatStatsObject.GetGroupStats","text":"<pre><code>function CombatStatsObject.GetGroupStats() -&gt; A table\n</code></pre> <p>@return <code>A</code> - table containing group statistics (cloned from the internal state)</p> <p>Retrieves a copy of the current group statistics</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetunitstats","title":"CombatStatsObject.GetUnitStats","text":"<pre><code>function CombatStatsObject.GetUnitStats(unitTag: string) -&gt; A table\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member (e.g., \"group1\")</p> <p>@return <code>A</code> - table containing the unit's statistics, or nil if the unit is not found</p> <p>Retrieves statistics for a specific unit in the group</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetunitdps","title":"CombatStatsObject.GetUnitDPS","text":"<pre><code>function CombatStatsObject.GetUnitDPS(unitTag: string) -&gt; DPSTable dps {\n    dmgType = number,\n    dps = number,\n    dmg = number,\n    _lastUpdated = number,\n    _lastChanged = number,\n}\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member</p> <p>@return <code>DPSTable</code> - The type of damage, total damage, DPS value, and the timestamp of the last update and last value update</p> <p>Retrieves DPS information for a specific unit in the group</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetunithps","title":"CombatStatsObject.GetUnitHPS","text":"<pre><code>function CombatStatsObject.GetUnitHPS(unitTag: string) -&gt; HPSTable hps {\n    hps = number,\n    overheal = number,\n    _lastUpdated = number,\n    _lastChanged = number,\n}\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member</p> <p>@return <code>HPSTable</code> - The overhealing value, HPS value, and the timestamp of the last update and last value update</p> <p>Retrieves HPS information for a specific unit in the group</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetunitult","title":"CombatStatsObject.GetUnitULT","text":"<pre><code>function CombatStatsObject.GetUnitULT(unitTag: string) -&gt; ultTable ult {\n    ultValue = number,\n    ult1ID = number,\n    ult2ID = number,\n    ult1Cost = number,\n    ult2Cost = number,\n    ultActivatedSetID = number,\n    _lastUpdated = number,\n    _lastChanged = number,\n}\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member</p> <p>@return <code>ultTable</code> - The current ultimate value, ultimate 1 ID, ultimate 1 cost, ultimate 2 ID, ultimate 2 cost, and the ID for an ultActivated set, and the timestamp of the last update and last value update</p> <p>TODO: hasUnitULTAbilityID Retrieves ultimate information for a specific unit in the group</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectgetunitskilllines","title":"CombatStatsObject.GetUnitSkillLines","text":"<pre><code>function CombatStatsObject.GetUnitSkillLines(unitTag: string) -&gt; skillLinesTable skillLines {\n    first = number,\n    second = number,\n    third = number,\n    _lastUpdated = number,\n    _lastChanged = number,\n}\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member</p> <p>@return <code>skillLinesTable</code> - The currently equipped skillLines of the unit (first, second, third) and the timestamp of the last update and last value update</p> <p>Retrieves skillLine information for a specific unit in the group</p>"},{"location":"types/CombatStatsObject/#combatstatsobjecthasunitultimatesslotted","title":"CombatStatsObject.HasUnitUltimatesSlotted","text":"<pre><code>function CombatStatsObject.HasUnitUltimatesSlotted(\n  unitTag: string,\n  listOfAbilityIDs: number[]\n) -&gt; hasEquipped boolean\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member</p> <p>@param <code>listOfAbilityIDs</code> - The abilityIDs that need to be checked for ( {id1, id2, id3} )</p> <p>@return <code>hasEquipped</code> - group member has ultimate ability equipped</p> <p>Checks if the group member has specific ultimates slotted</p>"},{"location":"types/CombatStatsObject/#combatstatsobjecthasunitultactivatedsetslotted","title":"CombatStatsObject.HasUnitUltActivatedSetSlotted","text":"<pre><code>function CombatStatsObject.HasUnitUltActivatedSetSlotted(\n  unitTag: string,\n  ultActivatedSetID: number\n) -&gt; hasEquipped boolean\n</code></pre> <p>@param <code>unitTag</code> - The unitTag of the group member</p> <p>@param <code>ultActivatedSetID</code> - The ultActivatedSetID that needs to be checked for</p> <p>@return <code>hasEquipped</code> - group member has ultActivatedSet equipped</p> <p>WARNING: This will soon be changed! Thats why this function is not documented in the API - use the new LibSetDetection v4 by @ExoY94 for that when it's ready Checks if the group member has a specific ultimate activated set slotted</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectregisterforevent","title":"CombatStatsObject.RegisterForEvent","text":"<pre><code>function CombatStatsObject.RegisterForEvent(\n  eventName: string,\n  callback: function\n) -&gt;  nil\n</code></pre> <p>@param <code>eventName</code> - The name of the event to register for</p> <p>@param <code>callback</code> - The function to be called when the event is triggered</p> <p>Registers a callback function for a specified event</p>"},{"location":"types/CombatStatsObject/#combatstatsobjectunregisterforevent","title":"CombatStatsObject.UnregisterForEvent","text":"<pre><code>function CombatStatsObject.UnregisterForEvent(\n  eventName: string,\n  callback: function\n) -&gt;  nil\n</code></pre> <p>@param <code>eventName</code> - The name of the event to unregister from</p> <p>@param <code>callback</code> - The callback function to unregister</p> <p>Unregisters a callback function for a specified event</p>"},{"location":"types/CombatStatsObject/#fields","title":"fields","text":""},{"location":"types/CombatStatsObject/#combatstatsobject__index","title":"CombatStatsObject.__index","text":"<pre><code>CombatStatsObject.__index : CombatStatsObject {\n    __index: CombatStatsObject,\n    New: function,\n    GetStatsShared: function,\n    Iterate: function,\n    __pairs: function,\n    GetGroupSize: function,\n    __len: function,\n    GetGroupStats: function,\n    GetUnitStats: function,\n    GetUnitDPS: function,\n    GetUnitHPS: function,\n    GetUnitULT: function,\n    ...(+5)\n}\n</code></pre>"},{"location":"types/LibGroupCombatStats/","title":"class LibGroupCombatStats","text":""},{"location":"types/LibGroupCombatStats/#methods","title":"methods","text":""},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsgetclassidfromskilllineid","title":"LibGroupCombatStats.GetClassIdFromSkillLineId","text":"<pre><code>function LibGroupCombatStats.GetClassIdFromSkillLineId(skillLineId) -&gt;  number\n</code></pre> <p>@return  - : classId</p> <p>Returns the classId which the skillLine originates from</p>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsgetclassiconfromskilllineid","title":"LibGroupCombatStats.GetClassIconFromSkillLineId","text":"<pre><code>function LibGroupCombatStats.GetClassIconFromSkillLineId(skillLineId) -&gt;  string\n</code></pre> <p>@return  - : texturePath of the base class icon</p> <p>Returns the icon of the class which the skillLine originates from</p>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsgetfancyclassiconfromskilllineid","title":"LibGroupCombatStats.GetFancyClassIconFromSkillLineId","text":"<pre><code>function LibGroupCombatStats.GetFancyClassIconFromSkillLineId(skillLineId) -&gt;  string\n</code></pre> <p>@return  - : texturePath of the collectibles class mastery icon</p> <p>Returns the collectibles class mastery icon of the class which the skillLine originates from</p>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsregisteraddon","title":"LibGroupCombatStats.RegisterAddon","text":"<pre><code>function LibGroupCombatStats.RegisterAddon(\n  addonName: string,\n  neededStats: table\n) -&gt; allows CombatStatsObject {\n    __index = CombatStatsObject,\n    New = function,\n    GetStatsShared = function,\n    Iterate = function,\n    __pairs = function,\n    GetGroupSize = function,\n    __len = function,\n    GetGroupStats = function,\n    GetUnitStats = function,\n    GetUnitDPS = function,\n    GetUnitHPS = function,\n    GetUnitULT = function,\n    GetUnitSkillLines = function,\n    HasUnitUltimatesSlotted = function,\n    HasUnitUltActivatedSetSlotted = function,\n    RegisterForEvent = function,\n    UnregisterForEvent = function,\n}\n</code></pre> <p>@param <code>addonName</code> - name of the addon to register</p> <p>@param <code>neededStats</code> - array of combat stats to listen to</p> <p>@return <code>allows</code> - for interaction with the API and also to register events</p> <p>registers an addon and returns a _CombatStatsObject</p>"},{"location":"types/LibGroupCombatStats/#fields","title":"fields","text":""},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsname","title":"LibGroupCombatStats.name","text":"<pre><code>LibGroupCombatStats.name: string = \"LibGroupCombatStats\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsversion","title":"LibGroupCombatStats.version","text":"<pre><code>LibGroupCombatStats.version: string = \"dev\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsult_activated_set_list","title":"LibGroupCombatStats.ULT_ACTIVATED_SET_LIST","text":"<pre><code>LibGroupCombatStats.ULT_ACTIVATED_SET_LIST : ({ name = \"saxhleel\", link = \"|H0:item:173857:364:50:0:0:0:0:0:0:0:0:0:0:0:1:0:0:1:0:0:0|h|h\", ... },{ name = \"pillager\", link = \"|H0:item:187028:364:50:0:0:0:2:0:0:0:0:0:0:0:1:0:0:1:0:0:0|h|h\", ... },{ name = \"cryptcanon\", link = \"|H0:item:194509:364:50:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0|h|h\", ... },{ name = \"MA\", link = \"|H0:item:124294:362:50:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0|h|h\", ... },{ name = \"WM\", link = \"|H0:item:124112:362:50:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0|h|h\", ... })\n</code></pre> <p>export set list, so it can be used to map the ultActivatedSetID to a real set</p>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsdamage_unknown","title":"LibGroupCombatStats.DAMAGE_UNKNOWN","text":"<pre><code>LibGroupCombatStats.DAMAGE_UNKNOWN: integer = 0\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsdamage_total","title":"LibGroupCombatStats.DAMAGE_TOTAL","text":"<pre><code>LibGroupCombatStats.DAMAGE_TOTAL: integer = 1\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsdamage_boss","title":"LibGroupCombatStats.DAMAGE_BOSS","text":"<pre><code>LibGroupCombatStats.DAMAGE_BOSS: integer = 2\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_group_dps_update","title":"LibGroupCombatStats.EVENT_GROUP_DPS_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_GROUP_DPS_UPDATE: string = \"EVENT_GROUP_DPS_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_group_hps_update","title":"LibGroupCombatStats.EVENT_GROUP_HPS_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_GROUP_HPS_UPDATE: string = \"EVENT_GROUP_HPS_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_group_ult_update","title":"LibGroupCombatStats.EVENT_GROUP_ULT_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_GROUP_ULT_UPDATE: string = \"EVENT_GROUP_ULT_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_group_skilllines_update","title":"LibGroupCombatStats.EVENT_GROUP_SKILLLINES_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_GROUP_SKILLLINES_UPDATE: string = \"EVENT_GROUP_SKILLLINES_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_player_dps_update","title":"LibGroupCombatStats.EVENT_PLAYER_DPS_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_PLAYER_DPS_UPDATE: string = \"EVENT_PLAYER_DPS_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_player_hps_update","title":"LibGroupCombatStats.EVENT_PLAYER_HPS_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_PLAYER_HPS_UPDATE: string = \"EVENT_PLAYER_HPS_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_player_ult_update","title":"LibGroupCombatStats.EVENT_PLAYER_ULT_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_PLAYER_ULT_UPDATE: string = \"EVENT_PLAYER_ULT_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_player_skilllines_update","title":"LibGroupCombatStats.EVENT_PLAYER_SKILLLINES_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_PLAYER_SKILLLINES_UPDATE: string = \"EVENT_PLAYER_SKILLLINES_UPDATE\"\n</code></pre>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_player_ult_value_update","title":"LibGroupCombatStats.EVENT_PLAYER_ULT_VALUE_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_PLAYER_ULT_VALUE_UPDATE: string = \"EVENT_PLAYER_ULT_VALUE_UPDATE\"\n</code></pre> <p>usually not needed</p>"},{"location":"types/LibGroupCombatStats/#libgroupcombatstatsevent_player_ult_type_update","title":"LibGroupCombatStats.EVENT_PLAYER_ULT_TYPE_UPDATE","text":"<pre><code>LibGroupCombatStats.EVENT_PLAYER_ULT_TYPE_UPDATE: string = \"EVENT_PLAYER_ULT_TYPE_UPDATE\"\n</code></pre> <p>usually not needed</p>"},{"location":"types/dps/","title":"class dps","text":""},{"location":"types/dps/#fields","title":"fields","text":""},{"location":"types/dps/#dpsdmgtype","title":"dps.dmgType","text":"<pre><code>dps.dmgType : number\n</code></pre> <p>damage type [0..2]</p>"},{"location":"types/dps/#dpsdps","title":"dps.dps","text":"<pre><code>dps.dps : number\n</code></pre> <p>single target dps in thousands</p>"},{"location":"types/dps/#dpsdmg","title":"dps.dmg","text":"<pre><code>dps.dmg : number\n</code></pre> <p>overall dps in thousands or overall damage in millions</p>"},{"location":"types/dps/#dps_lastupdated","title":"dps._lastUpdated","text":"<pre><code>dps._lastUpdated : number\n</code></pre> <p>timestamp of the last table update</p>"},{"location":"types/dps/#dps_lastchanged","title":"dps._lastChanged","text":"<pre><code>dps._lastChanged : number\n</code></pre> <p>timestamp of the last table real change</p>"},{"location":"types/hps/","title":"class hps","text":""},{"location":"types/hps/#fields","title":"fields","text":""},{"location":"types/hps/#hpshps","title":"hps.hps","text":"<pre><code>hps.hps : number\n</code></pre> <p>heal per second the group is consuming</p>"},{"location":"types/hps/#hpsoverheal","title":"hps.overheal","text":"<pre><code>hps.overheal : number\n</code></pre> <p>raw heal per second that is pushed out</p>"},{"location":"types/hps/#hps_lastupdated","title":"hps._lastUpdated","text":"<pre><code>hps._lastUpdated : number\n</code></pre> <p>timestamp of the last table update</p>"},{"location":"types/hps/#hps_lastchanged","title":"hps._lastChanged","text":"<pre><code>hps._lastChanged : number\n</code></pre> <p>timestamp of the last table real change</p>"},{"location":"types/skillLines/","title":"class skillLines","text":""},{"location":"types/skillLines/#fields","title":"fields","text":""},{"location":"types/skillLines/#skilllinesfirst","title":"skillLines.first","text":"<pre><code>skillLines.first : number\n</code></pre> <p>first skillLine</p>"},{"location":"types/skillLines/#skilllinessecond","title":"skillLines.second","text":"<pre><code>skillLines.second : number\n</code></pre> <p>second skillLine</p>"},{"location":"types/skillLines/#skilllinesthird","title":"skillLines.third","text":"<pre><code>skillLines.third : number\n</code></pre> <p>third skillLine</p>"},{"location":"types/skillLines/#skilllines_lastupdated","title":"skillLines._lastUpdated","text":"<pre><code>skillLines._lastUpdated : number\n</code></pre> <p>timestamp of the last table update</p>"},{"location":"types/skillLines/#skilllines_lastchanged","title":"skillLines._lastChanged","text":"<pre><code>skillLines._lastChanged : number\n</code></pre> <p>timestamp of the last table real change</p>"},{"location":"types/ult/","title":"class ult","text":""},{"location":"types/ult/#fields","title":"fields","text":""},{"location":"types/ult/#ultultvalue","title":"ult.ultValue","text":"<pre><code>ult.ultValue : number\n</code></pre> <p>raw ult points</p>"},{"location":"types/ult/#ultult1id","title":"ult.ult1ID","text":"<pre><code>ult.ult1ID : number\n</code></pre> <p>id of the frontbar ultimate</p>"},{"location":"types/ult/#ultult2id","title":"ult.ult2ID","text":"<pre><code>ult.ult2ID : number\n</code></pre> <p>id of the backbar ultimate</p>"},{"location":"types/ult/#ultult1cost","title":"ult.ult1Cost","text":"<pre><code>ult.ult1Cost : number\n</code></pre> <p>cost of the ult on the frontbar</p>"},{"location":"types/ult/#ultult2cost","title":"ult.ult2Cost","text":"<pre><code>ult.ult2Cost : number\n</code></pre> <p>cost of the ult on the backbar</p>"},{"location":"types/ult/#ultultactivatedsetid","title":"ult.ultActivatedSetID","text":"<pre><code>ult.ultActivatedSetID : number\n</code></pre> <p>ult activated set the player is wearing</p>"},{"location":"types/ult/#ult_lastupdated","title":"ult._lastUpdated","text":"<pre><code>ult._lastUpdated : number\n</code></pre> <p>timestamp of the last table update</p>"},{"location":"types/ult/#ult_lastchanged","title":"ult._lastChanged","text":"<pre><code>ult._lastChanged : number\n</code></pre> <p>timestamp of the last table real change</p>"}]}